plugins {
    id "org.springframework.boot" version "2.3.2.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "java"
}

group = "com.skmwizard"
version = "0.0.1-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        credentials {
            username "skmwizard"
            password "skmwizard2020!"
        }
        url "http://15.164.80.186:8081/repository/maven-public"
    }
}

ext {
//    set("springBootAdminVersion", "2.1.5")
//    set("springCloudVersion", "Greenwich.SR2")
    awsSDKVersion = "2.13.61"
    springdocVersion = "1.4.3"
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb-reactive")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server")
//    implementation("de.codecentric:spring-boot-admin-starter-client")
//    implementation("org.springframework.cloud:spring-cloud-starter-config")
//    implementation("org.springframework.cloud:spring-cloud-starter-vault-config")
    implementation platform("software.amazon.awssdk:bom:${awsSDKVersion}")
    implementation("software.amazon.awssdk:cognitoidentityprovider")
    implementation("software.amazon.awssdk:netty-nio-client")
    implementation("org.springdoc:springdoc-openapi-webflux-ui:${springdocVersion}")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
//    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation("io.projectreactor:reactor-test")
}